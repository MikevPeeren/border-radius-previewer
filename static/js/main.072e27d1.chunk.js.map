{"version":3,"sources":["constants/general.ts","components/Header.tsx","components/Slider.tsx","components/Generator.tsx","components/BorderRadiusDisplay.tsx","components/App.tsx","index.tsx"],"names":["LEFT","RIGHT","BOTTOM","Header","className","Slider","id","value","handleSliderChange","type","min","max","onChange","event","Generator","handleBorderRadiusChange","useState","topSliderValue","setTopSliderValue","leftSliderValue","setLeftSliderValue","rightSliderValue","setRightSliderValue","bottomSliderValue","setBottomSliderValue","location","target","shape","document","getElementById","borderRadius","style","useEffect","shapeElement","topLeftRadius","borderTopLeftRadius","topRightRadius","borderTopRightRadius","secondPercentageTopLeftRadius","charAt","length","substring","secondPercentageTopRightRadius","bottomLeftRadius","borderBottomLeftRadius","bottomRightRadius","borderBottomRightRadius","secondPercentageBottomLeftRadius","secondPercentageBottomRightRadius","firstPercentageTopLeftRadius","firstPercentageBottomLeftRadius","firstPercentageTopRightRadius","firstPercentageBottomRightRadius","BorderRadiusDisplay","borderRadiusValue","name","disabled","App","setBorderRadiusValue","ReactDOM","render"],"mappings":"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","file":"static/js/main.072e27d1.chunk.js","sourcesContent":["export const HEADER = 'Border Radius Previewer';\n\nexport const BORDER_RADIUS_LABEL = 'Border Radius:';\nexport const COPY = 'COPY';\n\nexport const TOP = 'top';\nexport const LEFT = 'left';\nexport const RIGHT = 'right';\nexport const BOTTOM = 'bottom';\n\nexport const DEFAULT_BORDER_RADIUS = '70% 30% 80% 20% / 50% 40% 60% 50%';\n","// React\nimport React from 'react';\n\n// CSS\nimport './Header.scss';\n\n// Constants\nimport { HEADER } from '../constants/general';\n\nconst Header = () => {\n  return <header className=\"header\">{HEADER}</header>;\n};\n\nexport default Header;\n","// React\nimport React from 'react';\n\n// CSS\nimport './Slider.scss';\n\ninterface SliderProps {\n  id: string;\n  value: number;\n  handleSliderChange: Function;\n}\nconst Slider: React.FC<SliderProps> = ({ id, value, handleSliderChange }) => {\n  return (\n    <input\n      className=\"slider\"\n      id={id}\n      type=\"range\"\n      min=\"0\"\n      max=\"100\"\n      value={value}\n      onChange={(event) => {\n        handleSliderChange(event, id);\n      }}\n    />\n  );\n};\n\nexport default Slider;\n","// React\nimport React, { useState, useEffect } from 'react';\n\n// CSS\nimport './Generator.scss';\n\n// Components\nimport Slider from './Slider';\n\n// Constants\nimport { TOP, LEFT, RIGHT, BOTTOM } from '../constants/general';\n\ninterface GeneratorProps {\n  handleBorderRadiusChange: Function;\n}\n\nconst Generator: React.FC<GeneratorProps> = ({ handleBorderRadiusChange }) => {\n  const [topSliderValue, setTopSliderValue] = useState(70);\n  const [leftSliderValue, setLeftSliderValue] = useState(50);\n  const [rightSliderValue, setRightSliderValue] = useState(60);\n  const [bottomSliderValue, setBottomSliderValue] = useState(20);\n\n  /**\n   * Switch Case to handle the different sliders.\n   */\n  const handleSliderChange = (event: any, location: string) => {\n    switch (location) {\n      case TOP:\n        setTopSliderValue(event.target.value);\n        break;\n      case LEFT:\n        setLeftSliderValue(event.target.value);\n        break;\n      case RIGHT:\n        setRightSliderValue(event.target.value);\n        break;\n      case BOTTOM:\n        setBottomSliderValue(event.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // Our Border Radius Shape\n  const shape = document.getElementById('shape');\n  const borderRadius = shape?.style.borderRadius;\n\n  /**\n   * Updating the Border Radius string, so users can Copy it.\n   */\n  useEffect(() => {\n    handleBorderRadiusChange(borderRadius);\n  }, [handleBorderRadiusChange, borderRadius]);\n\n  // TODO: Cleanup the mess below\n\n  // Handle Top Slider\n  useEffect(() => {\n    const shapeElement = document.getElementById('shape');\n\n    if (shapeElement) {\n      const topLeftRadius = shapeElement.style.borderTopLeftRadius;\n      const topRightRadius = shapeElement.style.borderTopRightRadius;\n\n      const secondPercentageTopLeftRadius =\n        topLeftRadius.charAt(topLeftRadius.length - 4) === '%'\n          ? topLeftRadius.substring(topLeftRadius.length - 5)\n          : topLeftRadius.substring(topLeftRadius.length - 4);\n      const secondPercentageTopRightRadius =\n        topRightRadius.charAt(topRightRadius.length - 4) === '%'\n          ? topRightRadius.substring(topRightRadius.length - 5)\n          : topRightRadius.substring(topRightRadius.length - 4);\n\n      shapeElement.style.borderTopLeftRadius = `${topSliderValue}% ${secondPercentageTopLeftRadius}`;\n      shapeElement.style.borderTopRightRadius = `${\n        100 - topSliderValue\n      }% ${secondPercentageTopRightRadius}`;\n    }\n  }, [topSliderValue]);\n\n  // Handle Bottom Slider\n  useEffect(() => {\n    const shapeElement = document.getElementById('shape');\n\n    if (shapeElement) {\n      const bottomLeftRadius = shapeElement.style.borderBottomLeftRadius;\n      const bottomRightRadius = shapeElement.style.borderBottomRightRadius;\n\n      const secondPercentageBottomLeftRadius =\n        bottomLeftRadius.charAt(bottomLeftRadius.length - 4) === '%'\n          ? bottomLeftRadius.substring(bottomLeftRadius.length - 5)\n          : bottomLeftRadius.substring(bottomLeftRadius.length - 4);\n      const secondPercentageBottomRightRadius =\n        bottomRightRadius.charAt(bottomRightRadius.length - 4) === '%'\n          ? bottomRightRadius.substring(bottomRightRadius.length - 2)\n          : bottomRightRadius.substring(bottomRightRadius.length - 4);\n\n      shapeElement.style.borderBottomLeftRadius = `${bottomSliderValue}% ${secondPercentageBottomLeftRadius}`;\n      shapeElement.style.borderBottomRightRadius = `${\n        100 - bottomSliderValue\n      }% ${secondPercentageBottomRightRadius}`;\n    }\n  }, [bottomSliderValue]);\n\n  // Handle Left Slider\n  useEffect(() => {\n    const shapeElement = document.getElementById('shape');\n\n    if (shapeElement) {\n      const topLeftRadius = shapeElement.style.borderTopLeftRadius;\n      const bottomLeftRadius = shapeElement.style.borderBottomLeftRadius;\n\n      const firstPercentageTopLeftRadius =\n        topLeftRadius.charAt(0) === '0'\n          ? topLeftRadius.substring(0, 3)\n          : topLeftRadius.substring(0, 4);\n\n      const firstPercentageBottomLeftRadius =\n        bottomLeftRadius.charAt(0) === '0'\n          ? bottomLeftRadius.substring(0, 3)\n          : bottomLeftRadius.substring(0, 4);\n\n      shapeElement.style.borderTopLeftRadius = `${firstPercentageTopLeftRadius} ${\n        100 - leftSliderValue\n      }%`;\n      shapeElement.style.borderBottomLeftRadius = `${firstPercentageBottomLeftRadius}\n      ${leftSliderValue}%`;\n    }\n  }, [leftSliderValue]);\n\n  // Handle Right Slider\n  useEffect(() => {\n    const shapeElement = document.getElementById('shape');\n\n    if (shapeElement) {\n      const topRightRadius = shapeElement.style.borderTopRightRadius;\n      const bottomRightRadius = shapeElement.style.borderBottomRightRadius;\n\n      const firstPercentageTopRightRadius =\n        topRightRadius.charAt(0) === '0'\n          ? topRightRadius.substring(0, 3)\n          : topRightRadius.substring(0, 4);\n      const firstPercentageBottomRightRadius =\n        bottomRightRadius.charAt(0) === '0'\n          ? bottomRightRadius.substring(0, 3)\n          : bottomRightRadius.substring(0, 4);\n\n      shapeElement.style.borderTopRightRadius = `${firstPercentageTopRightRadius} ${\n        100 - rightSliderValue\n      }%`;\n      shapeElement.style.borderBottomRightRadius = `${firstPercentageBottomRightRadius}\n      ${rightSliderValue}%`;\n    }\n  }, [rightSliderValue]);\n\n  return (\n    <div className=\"borderRadiusPreviewer\">\n      <div id=\"shape\" className=\"borderRadiusPreviewer__shape\">\n        {topSliderValue && (\n          <Slider\n            id={TOP}\n            value={topSliderValue}\n            handleSliderChange={handleSliderChange}\n          />\n        )}\n        {leftSliderValue && (\n          <Slider\n            id={LEFT}\n            value={leftSliderValue}\n            handleSliderChange={handleSliderChange}\n          />\n        )}\n        {rightSliderValue && (\n          <Slider\n            id={RIGHT}\n            value={rightSliderValue}\n            handleSliderChange={handleSliderChange}\n          />\n        )}\n        {bottomSliderValue && (\n          <Slider\n            id={BOTTOM}\n            value={bottomSliderValue}\n            handleSliderChange={handleSliderChange}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Generator;\n","// React\nimport React from 'react';\n\n// CSS\nimport './BorderRadiusDisplay.scss';\n\n// Constants\nimport { BORDER_RADIUS_LABEL, COPY } from '../constants/general';\n\ninterface BorderRadiusDisplayProps {\n  borderRadiusValue: string;\n}\n\nconst BorderRadiusDisplay: React.FC<BorderRadiusDisplayProps> = ({\n  borderRadiusValue,\n}) => {\n  return (\n    <div className=\"BorderRadiusDisplay\">\n      <label className=\"BorderRadiusDisplay__label\">\n        {BORDER_RADIUS_LABEL}\n      </label>\n      <div className=\"BorderRadiusDisplay__output\">\n        {borderRadiusValue && (\n          <input\n            className=\"BorderRadiusDisplay__output--input\"\n            id=\"border-radius\"\n            name=\"border-radius\"\n            type=\"text\"\n            value={borderRadiusValue}\n            disabled\n          ></input>\n        )}\n        <button className=\"BorderRadiusDisplay__output--submit\" type=\"submit\">\n          {COPY}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BorderRadiusDisplay;\n","// React\nimport React, { useState } from 'react';\n\n// CSS\nimport './App.scss';\n\n// Components\nimport Header from './Header';\nimport Generator from './Generator';\nimport BorderRadiusDisplay from './BorderRadiusDisplay';\n\n// Constants\nimport { DEFAULT_BORDER_RADIUS } from '../constants/general';\n\nconst App = () => {\n  const [borderRadiusValue, setBorderRadiusValue] = useState(\n    DEFAULT_BORDER_RADIUS,\n  );\n\n  /**\n   * Update the BorderRadiusDisplay\n   * @param borderRadius string\n   */\n  const handleBorderRadiusChange = (borderRadius: string) => {\n    setBorderRadiusValue(borderRadius);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header></Header>\n      <Generator\n        handleBorderRadiusChange={handleBorderRadiusChange}\n      ></Generator>\n      {borderRadiusValue && (\n        <BorderRadiusDisplay\n          borderRadiusValue={borderRadiusValue}\n        ></BorderRadiusDisplay>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// CSS\nimport './index.scss';\n\n// Components\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}